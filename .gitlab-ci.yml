stages:
  - build
  - test
  - build-sonar
  - lint
  - dependency_check
  - deploy
  - report

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.2"
  ANDROID_SDK_ROOT: "$CI_PROJECT_DIR/android-sdk"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

default:
  image: gradle:8.10.0-jdk17-jammy
  before_script:
    - apt-get update && apt-get install -y wget unzip curl docker.io
    - mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
    - wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdtools.zip
    - unzip cmdtools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
    - mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
    - rm cmdtools.zip
    - export PATH="$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
    - yes | sdkmanager --licenses || true
    - sdkmanager "platform-tools" "platforms;android-$ANDROID_COMPILE_SDK" "build-tools;$ANDROID_BUILD_TOOLS"
    - chmod +x ./gradlew

# Build APK
build:
  stage: build
  script:
    - echo $KEYSTORE_FILE | base64 -d > my-release-key.keystore || true
    - ./gradlew assembleRelease
  artifacts:
    paths:       
      - app/build/outputs/apk/**/*.apk
    expire_in: 1 week




local_deploy:
  stage: deploy  # tu peux aussi créer un stage "deploy" si tu veux
  needs:
    - job: build
  script:
    - echo "Déploiement local de l'APK"
    - mkdir -p deploy_apk
    - cp app/build/outputs/apk/release/*.apk deploy_apk/
    - ls -l deploy_apk/
  artifacts:
    paths:
      - deploy_apk/
    expire_in: 1 week