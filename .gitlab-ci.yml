stages:
  - build
  - test
  - build-sonar
  - lint
  - dependency_check
  - deploy_debug
  - deploy_release
  - report

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.2"
  ANDROID_SDK_ROOT: "$CI_PROJECT_DIR/android-sdk"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"
  JAVA_HOME: "C:\\Program Files\\Java\\jdk-17"

default:
  # Utiliser un shell executor Windows
  tags:
    - windows
  before_script:
    - echo "JAVA_HOME is $JAVA_HOME"
    - set PATH=%JAVA_HOME%\bin;%PATH%
    - mkdir "%ANDROID_SDK_ROOT%\cmdline-tools"
    - powershell -Command "Invoke-WebRequest -Uri https://dl.google.com/android/repository/commandlinetools-win-9477386_latest.zip -OutFile cmdtools.zip"
    - powershell -Command "Expand-Archive -Path cmdtools.zip -DestinationPath $env:ANDROID_SDK_ROOT\cmdline-tools"
    - powershell -Command "Rename-Item -Path $env:ANDROID_SDK_ROOT\cmdline-tools\cmdline-tools -NewName latest"
    - del cmdtools.zip
    - set PATH=%ANDROID_SDK_ROOT%\platform-tools;%ANDROID_SDK_ROOT%\emulator;%ANDROID_SDK_ROOT%\cmdline-tools\latest\bin;%PATH%
    - sdkmanager --licenses
    - sdkmanager "platform-tools" "platforms;android-%ANDROID_COMPILE_SDK%" "build-tools;%ANDROID_BUILD_TOOLS%"
    - chmod +x gradlew

build:
  stage: build
  script:
    - if not "%KEYSTORE_FILE%"=="" (echo %KEYSTORE_FILE% | base64 -d > my-release-key.keystore)
    - ./gradlew clean assembleRelease --stacktrace --info
    - dir app\build\outputs\apk\release
  artifacts:
    paths:
      - app\build\outputs\apk\release\
    expire_in: 1 week

unit_test:
  stage: test
  needs:
    - build
  script:
    - ./gradlew testDebugUnitTest --stacktrace --info
  artifacts:
    paths:
      - app\build\test-results\
      - app\build\reports\tests\
    when: always

build-sonar:
  stage: build-sonar
  script:
    - ./gradlew lintDebug
    - ./gradlew sonar -Dsonar.login=%SONAR_TOKEN% -Dsonar.host.url=%SONAR_HOST_URL% -Dsonar.androidLint.reportPaths=app\build\reports\lint-results-debug.xml --stacktrace --info
  allow_failure: true

lint_check:
  stage: lint
  script:
    - ./gradlew lint
  artifacts:
    paths:
      - app\build\reports\lint-results.html
    expire_in: 1 week

sast_check:
  stage: dependency_check
  image: owasp/dependency-check:latest
  script:
    - dependency-check.bat --project MyApp --scan ./app --format "HTML" --out reports\dependency-check
  artifacts:
    paths:
      - reports\dependency-check\
    expire_in: 1 week
  allow_failure: true

docker_build:
  stage: deploy_debug
  script:
    - docker login -u %CI_REGISTRY_USER% -p %CI_REGISTRY_PASSWORD% %CI_REGISTRY%
    - copy app\build\outputs\apk\release\app-release.apk .
    - docker build -t %CI_REGISTRY%/%CI_PROJECT_PATH%/app-debug:%CI_COMMIT_SHORT_SHA% .
    - docker push %CI_REGISTRY%/%CI_PROJECT_PATH%/app-debug:%CI_COMMIT_SHORT_SHA%

deploy_release:
  stage: deploy_release
  script:
    - copy app\build\outputs\apk\release\app-release.apk .
    - docker build -t myapp:release .
    - docker run -d --name myapp_release myapp:release

report:
  stage: report
  script:
    - echo "Pipeline finished. Collecting reports..."
    - dir app\build\reports
